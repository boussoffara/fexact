name: Test PyPI Dev

# Build on every branch push, tag push, and pull request change:
on:
  release:
   types:
     - created

jobs:


  test_build:
    name: Test package on ${{ matrix.os }} ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.8]
        os: [ubuntu-20.04, windows-2019, macos-10.15]

    steps:
    - uses: actions/checkout@v2.3.4
    - name: Install tox
      run: pip3 install tox
    - name: Run tox
      run: tox -p all


  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    env:
      CIBW_BUILD: cp3*-*
      CIBW_SKIP: pp*
    strategy:
      matrix:
        os: [ubuntu-20.04, windows-2019, macos-10.15]

    steps:
      - uses: actions/checkout@v2.3.4

      - uses: actions/setup-python@v2.2.2
        name: Install Python
        with:
          python-version: '3.8'

      - name:  Install deps
        run: pip install -r requirements.txt

      - name: Build wheels
        uses: joerick/cibuildwheel@v2.2.0

      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.3.4

      - uses: actions/setup-python@v2.2.2
        name: Install Python
        with:
          python-version: '3.8'

      - name:  Install deps
        run: pip install -r requirements.txt

      - name: Build sdist
        run: python setup.py sdist

      - uses: actions/upload-artifact@v2
        with:
          path: dist/*.tar.gz

  upload_pypi:
    needs: [test_build,build_wheels, build_sdist]
    runs-on: ubuntu-latest
    # upload to PyPI on every tag starting with 'v'
#    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v')
    # alternatively, to publish when a GitHub Release is created, use the following rule:
    # if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository_url: https://test.pypi.org/legacy/
